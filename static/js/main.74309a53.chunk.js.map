{"version":3,"sources":["components/Table/Table.tsx","components/Navi/Navigation.tsx","components/Loader/Loader.tsx","api.ts","types/sex.ts","components/People/PersonLink.tsx","types/sortFields.ts","components/People/PeopleTable.tsx","components/People/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HeadOfTable","handleNavLinkClass","isActive","classNames","className","role","to","Navigation","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Sex","PersonLink","person","slug","sex","Femail","name","SortField","People","people","personSlug","useParams","getParentsLink","personName","parent","find","Object","keys","map","key","born","died","motherName","fatherName","PeoplePage","useState","loading","setLoading","hasError","setHasError","setPeople","useEffect","length","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.74309a53.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const HeadOfTable: React.FC = () => {\n  const handleNavLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={handleNavLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={handleNavLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { HeadOfTable } from '../Table/Table';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <HeadOfTable />\n          </div>\n        </div>\n      </nav>\n\n      <Outlet />\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum Sex{\n  Femail = 'f',\n  Male = 'm',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Sex } from '../../types/sex';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === Sex.Femail,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export enum SortField {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n  Mother = 'mother',\n  Father = 'father',\n}\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\nimport { SortField } from '../../types/sortFields';\nimport { Sex } from '../../types/sex';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const People: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n  const getParentsLink = (personName: string | null) => {\n    if (!personName) {\n      return '-';\n    }\n\n    const parent = people.find(({ name }) => name === personName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return personName;\n  };\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            {Object.keys(SortField).map((key) => (\n              <th key={key}>{key}</th>\n            ))}\n          </tr>\n        </thead>\n        {people.map((person) => (\n          <tbody key={person.slug}>\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === personSlug,\n              })}\n            >\n              <td>\n                <Link\n                  to={person.slug}\n                  className={classNames({\n                    'has-text-danger': person.sex === Sex.Femail,\n                  })}\n                >\n                  {person.name}\n                </Link>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>{getParentsLink(person.motherName)}</td>\n              <td>{getParentsLink(person.fatherName)}</td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { People } from './PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    setHasError(false);\n    setLoading(true);\n\n    (async () => {\n      try {\n        setPeople(await getPeople());\n      } catch {\n        setHasError(true);\n      } finally {\n        setLoading(false);\n      }\n    })();\n\n    return () => setPeople([]);\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && !hasError && !people.length && <Loader />}\n\n          {!loading && hasError && !people.length && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && !hasError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!loading && !hasError && people.length\n            && <People people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HeadOfTable } from './components/Table/Table';\nimport { Navigation } from './components/Navi/Navigation';\nimport { PeoplePage } from './components/People/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <HeadOfTable />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Navigation />}>\n              <Route index element={<h1 className=\"title\">Home Page</h1>} />\n              <Route path=\"*\">\n                <Route index element={<h1 className=\"title\">Page not found</h1>} />\n              </Route>\n              <Route path=\"people\" element={<PeoplePage />}>\n                <Route path=\":personSlug\" element={<PeoplePage />} />\n              </Route>\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}